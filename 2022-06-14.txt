제네릭
클래스 추상 싱글톤 등등
익명클래스 인터페이스

람다식
익명객체 생성을 간소화시킴

ex = new interface(){
@override
method()
}; 	
==>	ex = ()->{};

람다식 this == 람다식 실행한 객체 참조

static 어디서든 공유가능

frontend backend 의 차이
사용자 관점에서 바라보면 이해가 쉬움

frontend 사용자와 직접 상호작용함
html 웹의 구조와 의미를 제공
css 웹의 스타일을 지정
jsp 동적인 기능을 만듦
=>직접 보이는 UI와 관련된분야 --사용자와 관련이 깊음

backend 사용자가 사용은 아지만 어떻게 동작을 하는지 보이지 않는 부분을 담당
DB와 같은 resource에 접근 처리
Server쪽 코드를 사용하는게 대부분이며
프론트엔드를 지원함(사용자들이 취하는 행동을 처리함)

라이브러리와 프레임워크 구분
라이브러리 들의 집합체 -> 개발을 위한 세트들을 프레임워크

자료구조!

앱과 웹에대한 개념차이

공공데이터 활용!

